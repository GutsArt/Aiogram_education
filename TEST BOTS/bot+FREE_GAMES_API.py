# https://www.gamerpower.com/api-read

import logging
import requests
from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import Message
from config import BOT_TOKEN

logging.basicConfig(level=logging.INFO)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

FREE_GAMES_API = "https://www.gamerpower.com/api/giveaways?platform=epic-games-store"  # –ø—Ä–∏–º–µ—Ä API

@dp.message(Command(commands="info"))
async def send_free_games_info(message: Message):
    try:
        resp = requests.get(FREE_GAMES_API, timeout=10)
        resp.raise_for_status()
        # if resp.status_code != 200:
        #     await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä–∞—Ö.")
        #     return
        games  = resp.json()
        if not games:
            await message.answer("üéÆ –°–µ–π—á–∞—Å –Ω–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä –≤ Epic Games Store.")
            return

        reply_text  = "üéÆ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∏–≥—Ä—ã —Å–µ–π—á–∞—Å –≤ Epic Games Store:\n\n"
        for game in games:
            title = game.get("title", "No title")
            status = game.get("status", "N/A")
            date = game.get("end_date", "N/A")

            game_url = game.get("open_giveaway_url", "N/A")
            search_query = game_url.split("open/")[-1].split("-epic-games")[0]
            game_url = f"https://store.epicgames.com/en-US/browse?q={search_query}"

            reply_text += (f"‚Ä¢ {title} - {status} (–¥–æ {date})\n  [Epic Games]({game_url})\n\n")

        await message.answer(reply_text, parse_mode="Markdown")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

if __name__ == "__main__":
    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    dp.run_polling(bot)
